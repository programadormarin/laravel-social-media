version: '3.3'

volumes:
  dbdata:
    driver: local

services:
  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
  mysql:
    image: mysql:5.7
    hostname: laravel_mysql
    container_name: laravel_mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "3306:3306"
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    command:  --default-authentication-plugin=mysql_native_password
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: laravel_php
    volumes:
      - ./src:/var/www/html
      # Enable xdebug
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    ports:
      - "9000:9000"
      - "9001:9001"

  composer:
    container_name: laravel_composer
    image: composer
    user: "1000"
    volumes:
        - .:/app
    command: install --prefer-dist --ignore-platform-reqs -o
    depends_on:
        - php
    entrypoint: ['composer', '--ignore-platform-reqs']
